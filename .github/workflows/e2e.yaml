---
name: "e2e"
"on":
  workflow_dispatch:

  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]
env:
  DOCKER_REGISTRY: ghcr.io/trifork/

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_PAT }} # we need this, as GITHUB_TOKEN only have permission to its own repo

      # OpenSearch is required for integration tests
      # - name: docker network create cheetah-infrastructure
      #  run: docker network create cheetah-infrastructure
      - name: Run development environment
        run: docker compose --profile opensearch --profile kafka --profile oauth --profile schemaregistry up --quiet-pull --force-recreate -d

      - name: Start mye2eclient container in shared network
        run: docker run -d -v "${PWD}/tests/:/opt/tests/" -it --name mye2eclient --network=cheetah-infrastructure alpine:latest

      - name: Setup mye2eclient container
        run: |
          docker exec mye2eclient apk add curl jq bash httpie

      - name: "Wait for opensearch, the slowest component"
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 3
          max_attempts: 25
          retry_wait_seconds: 5
          warning_on_retry: false
          command: 'docker exec mye2eclient curl -sS -X GET -H "Content-Type: application/json" http://admin:admin@opensearch:9200/_cat/indices'

      - name: Check docker health
        run: |
          echo $(docker compose ps -a | grep 'unhealthy')
          docker compose ps -a | grep 'unhealthy' && echo "Services unhealthy" && exit 1 || exit 0

      - name: opensearch test
        run: docker exec mye2eclient bash /opt/tests/opensearch.sh

      - name: kafka test
        run: docker exec mye2eclient bash /opt/tests/kafka.sh

      - name: schemaregistry test
        run: docker exec mye2eclient bash /opt/tests/schemaregistry.sh

    # - name: "see logs"
    #   run: docker logs cheetah-lib-templates-java-e2e-job-name-job
