version: "2.1"

services:
  es:
    image: elasticsearch:7.17.8
    hostname: es
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g -Dlog4j2.formatMsgNoLookups"
      - "xpack.security.enabled=false"
      - "xpack.license.self_generated.type=basic"
      - ELASTIC_PASSWORD=d6MR9LN8kwpqlZClVuP3WYxfZiuOEOEN
    mem_limit: 2048m
    cpus: 1
    #cpu_percent: 10
    ports:
      - 9200:9200
    volumes:
      - es:/usr/share/elasticsearch/data
    restart: unless-stopped
    healthcheck:
      test: curl -u elastic:d6MR9LN8kwpqlZClVuP3WYxfZiuOEOEN -s -f es:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    profiles:
      - elasticsearch


  es-cfg:
    build:
      context: ./config/elasticsearch
      dockerfile: Dockerfile
    depends_on:
      es:
        condition: service_healthy
    profiles:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.8
    hostname: kibana
    mem_limit: 1024m
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: '["http://es:9200"]'
    depends_on:
      es:
        condition: service_healthy
    profiles:
      - elasticsearch

volumes:
  es:

networks:
  default:
    name: "cheetah-infrastructure"

