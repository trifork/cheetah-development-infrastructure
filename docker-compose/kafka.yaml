version: "2.1"

services:
  zookeeper:
    image: quay.io/strimzi/kafka:0.33.2-kafka-3.2.3
    command:
      ["sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: my-kafka
    command:
      [
        "sh",
        "-c",
        "bin/kafka-server-start.sh /opt/kafka/custom-config/server.properties",
      ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ROOT_LOGGER_LEVEL: debug
    volumes:
      - ../config/kafka/server.properties:/opt/kafka/custom-config/server.properties
    healthcheck:
      test: nc -z kafka 19092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-setup:
    image: quay.io/strimzi/kafka:0.33.2-kafka-3.2.3
    hostname: kafka-setup
    container_name: kafka-setup
    volumes:
      - ../config/kafkaconfig.sh:/etc/config/kafkaconfig.sh
    command: "bash /etc/config/kafkaconfig.sh"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  redpanda:
    image: docker.redpanda.com/vectorized/console:v2.1.1
    entrypoint: /bin/sh
    command: -c "/app/console"
    mem_limit: 512m
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
    volumes:
      - ../config/redpanda.yaml:/tmp/config.yml
    ports:
      - "9898:8080"
    depends_on:
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_healthy

  # Kafka Prometheus exporter https://github.com/cloudhut/kminion
  kafka-minion:
    image: quay.io/cloudhut/kminion:master
    hostname: kafka-minion
    container_name: kafka-minion
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 8088:8080
    environment:
      KAFKA_BROKERS: kafka:19092
    profiles:
      - donotstart

  schema-registry:
    mem_limit: 256m
    image: confluentinc/cp-schema-registry:7.3.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:19092"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: nc -z kafka 19092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s

networks:
  default:
    name: "cheetah-infrastructure"
    external: true
