##############################
##############################
# This file is automatically generated by the Strimzi Cluster Operator
# Any changes to this file will be ignored and overwritten!
##############################
##############################
#
###########
## Broker ID
###########
#broker.id=1
#
###########
## Zookeeper
###########
#zookeeper.connect=zookeeper:2181
#
#listeners=CLIENT://kafka:19092,LISTENER_DOCKER_EXTERNAL://kafka:9092
#advertised.listeners=CLIENT://kafka:19092,LISTENER_DOCKER_EXTERNAL://kafka:9092
#
#inter.broker.listener.name=LISTENER_DOCKER_EXTERNAL
#listener.name.client.oauthbearer.sasl.server.callback.handler.class=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler
### listener.name.client.oauthbearer.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
#sasl.enabled.mechanisms=OAUTHBEARER
###listener.name.client.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
###    oauth.jwks.endpoint.uri="http://keycloak:8080/auth/realms/master/protocol/openid-connect/certs" \
###    oauth.valid.issuer.uri=false \
###    unsecuredLoginStringClaim_sub="unused";
#listener.name.client.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
#oauth.jwks.endpoint.uri="http://keycloak:8080/auth/realms/master/protocol/openid-connect/certs" oauth.valid.issuer.uri=false unsecuredLoginStringClaim_sub="unused";
### sasl.oauthbearer.jwks.endpoint.url=http://keycloak:8080/auth/realms/master/protocol/openid-connect/certs
#security.protocol=SASL_PLAINTEXT
#principal.builder.class=io.strimzi.kafka.oauth.server.OAuthKafkaPrincipalBuilder
#
###########
## User provided configuration
###########
#log.retention.bytes=1073741824
#log.retention.minutes=43200
#log.roll.ms=86400000
#log.segment.bytes=20971520
#retention.ms=94608000000
#min.insync.replicas=1
#default.replication.factor=1
#transaction.state.log.replication.factor=1
#offsets.topic.replication.factor=1


listeners=CLIENT://kafka:9092,INTER://kafka:19092
advertised.listeners=CLIENT://kafka:9092,INTER://kafka:19092
zookeeper.connect=zookeeper:2181
inter.broker.listener.name=CLIENT
listener.security.protocol.map=CLIENT:SASL_PLAINTEXT,INTER:PLAINTEXT
sasl.enabled.mechanisms=OAUTHBEARER
security.protocol=SASL_PLAINTEXT
sasl.mechanism.inter.broker.protocol=OAUTHBEARER

listener.name.client.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
    oauth.client.id="test" \
    oauth.client.secret="BQvvCOLUlbWTmpbYSib5cCgIqRXnd71G" \
    oauth.token.endpoint.uri="http://keycloak:8080/auth/realms/master/protocol/openid-connect/token" \
    oauth.valid.issuer.uri="http://keycloak:8080/auth/realms/master" \
    oauth.jwks.endpoint.uri="http://keycloak:8080/auth/realms/master/protocol/openid-connect/certs" \
    oauth.username.claim="preferred_username";

listener.name.client.oauthbearer.sasl.server.callback.handler.class=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler
# Login-as-a-client handler
listener.name.client.oauthbearer.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

broker.id=1


min.insync.replicas=1
default.replication.factor=1
transaction.state.log.replication.factor=1
offsets.topic.replication.factor=1