group.id=connect

# internal connect topics
offset.storage.topic=_connector-sources
config.storage.topic=_connector-configs
status.storage.topic=_connector-statuses

offset.storage.replication.factor=1
config.storage.replication.factor=1
status.storage.replication.factor=1

#topic.creation.enable=false

# Bootstrap servers to connect to the Kafka cluster
bootstrap.servers=kafka:19092

# Converters used to serialize and deserialize
key.converter=org.apache.kafka.connect.json.JsonConverter
value.converter=org.apache.kafka.connect.json.JsonConverter
key.converter.schemas.enable=false
value.converter.schemas.enable=false


#key.converter.schema.registry.url=http://schema-registry:8080
#value.converter.schema.registry.url=http://schema-registry:8080

# List of connect plugins (connectors and transformations)
plugin.path=/opt/kafka/plugins

# OAuth2 configurations
security.protocol=SASL_PLAINTEXT
sasl.mechanism=OAUTHBEARER
sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
      oauth.client.id="kafka" \
      oauth.client.secret="kafka-secret" \
      oauth.scope="kafka" \
      oauth.token.endpoint.uri="http://keycloak:1852/realms/local-development/protocol/openid-connect/token";
sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler


#consumer configs
consumer.security.protocol=SASL_PLAINTEXT
consumer.sasl.mechanism=OAUTHBEARER
consumer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
      oauth.client.id="kafka" \
      oauth.client.secret="kafka-secret" \
      oauth.scope="kafka" \
      oauth.token.endpoint.uri="http://keycloak:1852/realms/local-development/protocol/openid-connect/token";
consumer.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
consumer.bootstrap.servers=kafka:19092

#admin configs
admin.security.protocol=SASL_PLAINTEXT
admin.sasl.mechanism=OAUTHBEARER
admin.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
      oauth.client.id="kafka" \
      oauth.client.secret="kafka-secret" \
      oauth.scope="kafka" \
      oauth.token.endpoint.uri="http://keycloak:1852/realms/local-development/protocol/openid-connect/token";
admin.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
admin.bootstrap.servers=kafka:19092


#producer configs
producer.security.protocol=SASL_PLAINTEXT
producer.sasl.mechanism=OAUTHBEARER
producer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
      oauth.client.id="kafka" \
      oauth.client.secret="kafka-secret" \
      oauth.scope="kafka" \
      oauth.token.endpoint.uri="http://keycloak:1852/realms/local-development/protocol/openid-connect/token";
producer.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
producer.bootstrap.servers=kafka:19092